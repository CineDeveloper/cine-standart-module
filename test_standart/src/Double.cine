proc testDouble(:results)
    rules
        final = results == TestResults
    results:test(-1.2.abs() == 1.2, builtIn_currentFile, builtIn_currentLine)
    results:test(1.2.abs() == 1.2, builtIn_currentFile, builtIn_currentLine)
    var := Double.pi() / 8.0
    results:test(var.cos().arcCos().inRange?(0.38, 0.4), builtIn_currentFile, builtIn_currentLine)
    results:test(var.ctg().arcCtg().inRange?(0.38, 0.4), builtIn_currentFile, builtIn_currentLine)
    results:test(var.sin().arcSin().inRange?(0.38, 0.4), builtIn_currentFile, builtIn_currentLine)
    results:test(var.tg().arcTg().inRange?(0.38, 0.4), builtIn_currentFile, builtIn_currentLine)
    results:test(var.ceil() == 1.0, builtIn_currentFile, builtIn_currentLine)
    p := (var + 11.0).disassemble()
    results:test(p.first.inRange?(10.99, 11.01), builtIn_currentFile, builtIn_currentLine)
    results:test(p.second.inRange?(0.3, 0.4), builtIn_currentFile, builtIn_currentLine)
    results:test(var.exp().inRange?(1.47, 1.49), builtIn_currentFile, builtIn_currentLine)
    results:test(var.floor() == 0.0, builtIn_currentFile, builtIn_currentLine)
    results:test(Double.fromString("10.1").item?(), builtIn_currentFile, builtIn_currentLine)
    results:test(Double.fromString("10.1")[].inRange?(10.09, 10.11), builtIn_currentFile, builtIn_currentLine)
    results:test(Double.fromString("-10.1").item?(), builtIn_currentFile, builtIn_currentLine)
    results:test(Double.fromString("-10.1")[].inRange?(-10.11, -10.09), builtIn_currentFile, builtIn_currentLine)
    results:test(Double.fromString("0.0").item?(), builtIn_currentFile, builtIn_currentLine)
    results:test(Double.fromString("0.0")[].inRange?(-0.01, 0.01), builtIn_currentFile, builtIn_currentLine)
    results:test(Double.fromString("").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(Double.fromString("456.2fgf").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(var.lg().inRange?(-0.41, -0.39), builtIn_currentFile, builtIn_currentLine)
    results:test(var.ln().inRange?(-0.94, -0.92), builtIn_currentFile, builtIn_currentLine)
    results:test(var.log(0.5).inRange?(1.34, 1.35), builtIn_currentFile, builtIn_currentLine)
    results:test((10.34 % 10.0).inRange?(0.3399, 0.3401), builtIn_currentFile, builtIn_currentLine)
    results:test(10.34.power(2.0).inRange?(106.915599, 106.915601), builtIn_currentFile, builtIn_currentLine)
    results:test(var.sqrt().inRange?(0.62, 0.63), builtIn_currentFile, builtIn_currentLine)

