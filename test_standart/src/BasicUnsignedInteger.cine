proc testBasicUnsignedInteger(:results)
    rules
        final = results == TestResults
    results:test(UInt64.fromString("10").item?(), builtIn_currentFile, builtIn_currentLine)
    results:test(!UInt64.fromString("10").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("10")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("0").item?(), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("0")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("18446744073709551615").item?(), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("18446744073709551615")[] == 18446744073709551615, builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("18446744073709551616").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("-1").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.fromString("0-121").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt8.maxValue() == 255.convertTo(UInt8), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt16.maxValue() == 65535.convertTo(UInt16), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt32.maxValue() == 4294967295.convertTo(UInt32), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.maxValue() == 18446744073709551615, builtIn_currentFile, builtIn_currentLine)
    results:test(UInt8.minValue() == UInt8, builtIn_currentFile, builtIn_currentLine)
    results:test(UInt16.minValue() == UInt16, builtIn_currentFile, builtIn_currentLine)
    results:test(UInt32.minValue() == UInt32, builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.minValue() == UInt64, builtIn_currentFile, builtIn_currentLine)
    results:test(6.power(0) == 1, builtIn_currentFile, builtIn_currentLine)
    results:test(6.power(2) == 36, builtIn_currentFile, builtIn_currentLine)
    results:test(6.power(3) == 216, builtIn_currentFile, builtIn_currentLine)
    results:test(6.power(24) == 4738381338321616896, builtIn_currentFile, builtIn_currentLine)
    results:test(6.power(25) == 9983543956220149760, builtIn_currentFile, builtIn_currentLine)
    results:test(6.convertTo(UInt8).power(0.convertTo(UInt8)) == 1.convertTo(UInt8), builtIn_currentFile, builtIn_currentLine)
    results:test(6.convertTo(UInt8).power(2.convertTo(UInt8)) == 36.convertTo(UInt8), builtIn_currentFile, builtIn_currentLine)
    results:test(6.convertTo(UInt8).power(3.convertTo(UInt8)) == 216.convertTo(UInt8), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt8.maxValue() << 1 == 254.convertTo(UInt8), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt16.maxValue() << 1 == 65534.convertTo(UInt16), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt32.maxValue() << 1 == 4294967294.convertTo(UInt32), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.maxValue() << 1 == 18446744073709551614, builtIn_currentFile, builtIn_currentLine)
    results:test(7 << 3 == 56, builtIn_currentFile, builtIn_currentLine)
    results:test(7.convertTo(UInt8) << 3 == 56.convertTo(UInt8), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt8.maxValue() >> 1 == 127.convertTo(UInt8), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt16.maxValue() >> 1 == 32767.convertTo(UInt16), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt32.maxValue() >> 1 == 2147483647.convertTo(UInt32), builtIn_currentFile, builtIn_currentLine)
    results:test(UInt64.maxValue() >> 1 == 9223372036854775807, builtIn_currentFile, builtIn_currentLine)
    results:test(70 >> 3 == 8, builtIn_currentFile, builtIn_currentLine)
    results:test(70.convertTo(UInt8) >> 3 == 8.convertTo(UInt8), builtIn_currentFile, builtIn_currentLine)
    results:test(0.toString() == "0", builtIn_currentFile, builtIn_currentLine)
    results:test(9.toString() == "9", builtIn_currentFile, builtIn_currentLine)
    results:test(10.toString() == "10", builtIn_currentFile, builtIn_currentLine)
    results:test(99.toString() == "99", builtIn_currentFile, builtIn_currentLine)
    results:test(100.toString() == "100", builtIn_currentFile, builtIn_currentLine)
    results:test(999.toString() == "999", builtIn_currentFile, builtIn_currentLine)
    results:test(1000.toString() == "1000", builtIn_currentFile, builtIn_currentLine)
    results:test(9999.toString() == "9999", builtIn_currentFile, builtIn_currentLine)
    results:test(10000.toString() == "10000", builtIn_currentFile, builtIn_currentLine)
    results:test(99999.toString() == "99999", builtIn_currentFile, builtIn_currentLine)
    results:test(100000.toString() == "100000", builtIn_currentFile, builtIn_currentLine)
    results:test(999999.toString() == "999999", builtIn_currentFile, builtIn_currentLine)
    results:test(1000000.toString() == "1000000", builtIn_currentFile, builtIn_currentLine)
    results:test(9999999.toString() == "9999999", builtIn_currentFile, builtIn_currentLine)
    results:test(10000000.toString() == "10000000", builtIn_currentFile, builtIn_currentLine)
    results:test(99999999.toString() == "99999999", builtIn_currentFile, builtIn_currentLine)
    results:test(100000000.toString() == "100000000", builtIn_currentFile, builtIn_currentLine)
    results:test(999999999.toString() == "999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(1000000000.toString() == "1000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(9999999999.toString() == "9999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(10000000000.toString() == "10000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(99999999999.toString() == "99999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(100000000000.toString() == "100000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(999999999999.toString() == "999999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(1000000000000.toString() == "1000000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(9999999999999.toString() == "9999999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(10000000000000.toString() == "10000000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(99999999999999.toString() == "99999999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(100000000000000.toString() == "100000000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(999999999999999.toString() == "999999999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(1000000000000000.toString() == "1000000000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(9999999999999999.toString() == "9999999999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(10000000000000000.toString() == "10000000000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(99999999999999999.toString() == "99999999999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(100000000000000000.toString() == "100000000000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(999999999999999999.toString() == "999999999999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(1000000000000000000.toString() == "1000000000000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(9999999999999999999.toString() == "9999999999999999999", builtIn_currentFile, builtIn_currentLine)
    results:test(10000000000000000000.toString() == "10000000000000000000", builtIn_currentFile, builtIn_currentLine)
    results:test(18446744073709551615.toString() == "18446744073709551615", builtIn_currentFile, builtIn_currentLine)
