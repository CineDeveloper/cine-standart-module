proc testFloat(:results)
    rules
        final = results == TestResults
    results:test(-1.2.convertTo(Float).abs() == 1.2.convertTo(Float), builtIn_currentFile, builtIn_currentLine)
    results:test(1.2.convertTo(Float).abs() == 1.2.convertTo(Float), builtIn_currentFile, builtIn_currentLine)
    var := Float.pi() / 8.0.convertTo(Float)
    results:test(var.cos().arcCos().inRange?(0.38.convertTo(Float), 0.4.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(var.ctg().arcCtg().inRange?(0.38.convertTo(Float), 0.4.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(var.sin().arcSin().inRange?(0.38.convertTo(Float), 0.4.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(var.tg().arcTg().inRange?(0.38.convertTo(Float), 0.4.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(var.ceil() == 1.0.convertTo(Float), builtIn_currentFile, builtIn_currentLine)
    p := (var + 11.0.convertTo(Float)).disassemble()
    results:test(p.first.inRange?(10.99.convertTo(Float), 11.01.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(p.second.inRange?(0.3.convertTo(Float), 0.4.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(var.exp().inRange?(1.47.convertTo(Float), 1.49.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(var.floor() == 0.0.convertTo(Float), builtIn_currentFile, builtIn_currentLine)
    results:test(Float.fromString("10.1").item?(), builtIn_currentFile, builtIn_currentLine)
    results:test(Float.fromString("10.1")[].inRange?(10.09.convertTo(Float), 10.11.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(Float.fromString("-10.1").item?(), builtIn_currentFile, builtIn_currentLine)
    results:test(Float.fromString("-10.1")[].inRange?(-10.11.convertTo(Float), -10.09.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(Float.fromString("0.0").item?(), builtIn_currentFile, builtIn_currentLine)
    results:test(Float.fromString("0.0")[].inRange?(-0.01.convertTo(Float), 0.01.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(Float.fromString("").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(Float.fromString("456.2fgf").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(var.lg().inRange?(-0.41.convertTo(Float), -0.39.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(var.ln().inRange?(-0.94.convertTo(Float), -0.92.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(var.log(0.5.convertTo(Float)).inRange?(1.34.convertTo(Float), 1.35.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test((10.34.convertTo(Float) % 10.0.convertTo(Float)).inRange?(0.3399.convertTo(Float), 0.3401.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(10.34.convertTo(Float).power(2.0.convertTo(Float)).inRange?(106.915599.convertTo(Float), 106.915601.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
    results:test(var.sqrt().inRange?(0.62.convertTo(Float), 0.63.convertTo(Float)), builtIn_currentFile, builtIn_currentLine)
