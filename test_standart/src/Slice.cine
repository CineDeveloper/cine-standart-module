proc testSlice(:results)
    rules
        final = results == TestResults
    a := "abc"
    a:setItem(1, 'k')
    b := a
    a:setItem(1, 'b')
    results:test(a == "abc", builtIn_currentFile, builtIn_currentLine)
    results:test(b == "akc", builtIn_currentFile, builtIn_currentLine)
    str := "123"
    results:test(str + '4' == "1234", builtIn_currentFile, builtIn_currentLine)
    results:test(str + "456" == "123456", builtIn_currentFile, builtIn_currentLine)
    results:test("" + "" == "", builtIn_currentFile, builtIn_currentLine)
    results:test("" + "ab" == "ab", builtIn_currentFile, builtIn_currentLine)
    results:test("ab" + "" == "ab", builtIn_currentFile, builtIn_currentLine)
    results:test("" + 'a' == "a", builtIn_currentFile, builtIn_currentLine)
    str += '4'
    results:test(str == "1234", builtIn_currentFile, builtIn_currentLine)
    str += "56"
    results:test(str == "123456", builtIn_currentFile, builtIn_currentLine)
    str = ""
    results:test(str == "", builtIn_currentFile, builtIn_currentLine)
    str += 'a'
    results:test(str == "a", builtIn_currentFile, builtIn_currentLine)
    str = ""
    str += ""
    results:test(str == "", builtIn_currentFile, builtIn_currentLine)
    str += "123456"
    results:test(str == "123456", builtIn_currentFile, builtIn_currentLine)
    str += ""
    results:test(str == "123456", builtIn_currentFile, builtIn_currentLine)
    data := BinaryData
    data += str
    position := 0
    str = [UInt8]
    results:test(str == "", builtIn_currentFile, builtIn_currentLine)
    str = [UInt8].getFromBinaryData(data, position)
    results:test(str == "123456", builtIn_currentFile, builtIn_currentLine)
    data = BinaryData
    data += ""
    position = 0
    str = [UInt8]
    results:test(str == "", builtIn_currentFile, builtIn_currentLine)
    results:test(!str.string?(), builtIn_currentFile, builtIn_currentLine)
    str = [UInt8].getFromBinaryData(data, position)
    results:test(str == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.string?(), builtIn_currentFile, builtIn_currentLine)
    s := [UInt64]{1, 2, 3, 4, 5}
    results:test((s & [UInt64]{2, 3, 5, 7, 11}) == [UInt64]{0, 2, 1, 4, 1}, builtIn_currentFile, builtIn_currentLine)
    results:test(([UInt64] & [UInt64]) == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test((s | [UInt64]{2, 3, 5, 7, 11}) == [UInt64]{3, 3, 7, 7, 15}, builtIn_currentFile, builtIn_currentLine)
    results:test(([UInt64] | [UInt64]) == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test((s ^ [UInt64]{2, 3, 5, 7, 11}) == [UInt64]{3, 1, 6, 3, 14}, builtIn_currentFile, builtIn_currentLine)
    results:test(([UInt64] ^ [UInt64]) == [UInt64], builtIn_currentFile, builtIn_currentLine)
    s &= [UInt64]{2, 3, 5, 7, 11}
    results:test(s == [UInt64]{0, 2, 1, 4, 1}, builtIn_currentFile, builtIn_currentLine)
    s = [UInt64]{1, 2, 3, 4, 5}
    s |= [UInt64]{2, 3, 5, 7, 11}
    results:test(s == [UInt64]{3, 3, 7, 7, 15}, builtIn_currentFile, builtIn_currentLine)
    s = [UInt64]{1, 2, 3, 4, 5}
    s ^= [UInt64]{2, 3, 5, 7, 11}
    results:test(s == [UInt64]{3, 1, 6, 3, 14}, builtIn_currentFile, builtIn_currentLine)
    s = [UInt64]
    s &= [UInt64]
    results:test(s == [UInt64], builtIn_currentFile, builtIn_currentLine)
    s |= [UInt64]
    results:test(s == [UInt64], builtIn_currentFile, builtIn_currentLine)
    s ^= [UInt64]
    results:test(s == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test(str.string?(), builtIn_currentFile, builtIn_currentLine)
    str = str.asSlice()
    results:test(!str.string?(), builtIn_currentFile, builtIn_currentLine)
    str = str.asString()
    results:test(str.string?(), builtIn_currentFile, builtIn_currentLine)
    str = str.asSlice()
    results:test(!str.string?(), builtIn_currentFile, builtIn_currentLine)
    str:setStringFlag()
    results:test(str.string?(), builtIn_currentFile, builtIn_currentLine)
    str:clear()
    results:test(str == "", builtIn_currentFile, builtIn_currentLine)
    s = [UInt64]{3, 1, 6, 3, 14}
    results:test(s.clone() == [UInt64]{3, 1, 6, 3, 14}, builtIn_currentFile, builtIn_currentLine)
    results:test([UInt64].clone() == [UInt64], builtIn_currentFile, builtIn_currentLine)
    str = "0123456789"
    results:test(str.contain?('0'), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?('2'), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?('5'), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?('9'), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?('_'), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?('e'), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?('r'), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?('A'), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".contain?('A'), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("0"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("2"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("5"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("9"), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?("_"), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?("e"), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?("r"), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?("A"), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".contain?("A"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("01"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("23"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("45"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("56"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("567"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?("89"), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?("02"), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?("er"), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?("657"), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?("912"), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".contain?("912"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('0')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('2')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('5')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('9')), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList(UInt8).create('_')), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList(UInt8).create('e')), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList(UInt8).create('r')), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList(UInt8).create('A')), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".contain?(VAList(UInt8).create('A')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('0', '4')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('2', '3')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('5', '2')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('9', '0')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('0', '2', '3', '9')), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList(UInt8).create('_', 'p')), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList(UInt8).create('e', '!')), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList(UInt8).create('r', 'A')), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList(UInt8).create('A', '+')), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".contain?(VAList(UInt8).create('A', '+')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('_', '4')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('2', 'y')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('q', '2')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('9', '!')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('!', '@', '#', '9')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList(UInt8).create('9', '@', '#', '!')), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("0")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("2")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("5")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("9")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("_")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("e")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("r")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("A")), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".contain?(VAList([UInt8]).create("A")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("0", "4")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("2", "3")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("5", "2")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("9", "0")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("0", "2", "3", "9")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("_", "p")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("e", "!")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("r", "A")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("A", "+")), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".contain?(VAList([UInt8]).create("A", "+")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("_", "4")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("2", "y")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("q", "2")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("9", "!")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("!", "@", "#", "9")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("9", "@", "#", "!")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("01")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("23")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("45")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("89")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("_0")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("e1")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("13")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("79")), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".contain?(VAList([UInt8]).create("79")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("01", "45")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("2_", "34")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("56", "2q")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("89", "01")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("01", "23", "34", "89")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("_1", "p1")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("e3", "!2")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("3r", "3A")), builtIn_currentFile, builtIn_currentLine)
    results:test(!str.contain?(VAList([UInt8]).create("7A", "+7")), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".contain?(VAList([UInt8]).create("7A", "+7")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("__", "45")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("23", "y1")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("qq", "12")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("89", "!_")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("!", "@", "#", "89")), builtIn_currentFile, builtIn_currentLine)
    results:test(str.contain?(VAList([UInt8]).create("89", "@", "#", "!")), builtIn_currentFile, builtIn_currentLine)
    str:copy(0, 1, "1")
    results:test(str == "1123456789", builtIn_currentFile, builtIn_currentLine)
    str:copy(0, 2, "00")
    results:test(str == "0023456789", builtIn_currentFile, builtIn_currentLine)
    str:copy(9, 10, "1")
    results:test(str == "0023456781", builtIn_currentFile, builtIn_currentLine)
    str:copy(8, 10, "00")
    results:test(str == "0023456700", builtIn_currentFile, builtIn_currentLine)
    str:copy(0, 10, "9876543210")
    results:test(str == "9876543210", builtIn_currentFile, builtIn_currentLine)
    str:copy(3, 7, "asdf")
    results:test(str == "987asdf210", builtIn_currentFile, builtIn_currentLine)
    str:copyToFirst("asdf")
    results:test(str == "asdfsdf210", builtIn_currentFile, builtIn_currentLine)
    str:copyToLast("asdf")
    results:test(str == "asdfsdasdf", builtIn_currentFile, builtIn_currentLine)
    results:test(str.count('a') == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count('s') == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count('1') == 0, builtIn_currentFile, builtIn_currentLine)
    results:test("".count('1') == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList(UInt8).create('a')) == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList(UInt8).create('s')) == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList(UInt8).create('1')) == 0, builtIn_currentFile, builtIn_currentLine)
    results:test("".count(VAList(UInt8).create('1')) == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList(UInt8).create('a', '1')) == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList(UInt8).create('s', 'a')) == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList(UInt8).create('1', '0')) == 0, builtIn_currentFile, builtIn_currentLine)
    results:test("".count(VAList(UInt8).create('1', '0')) == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count("a") == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count("s") == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count("1") == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count("asd") == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count("fs") == 1, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count("sdaa") == 0, builtIn_currentFile, builtIn_currentLine)
    results:test("".count("sdaa") == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("a")) == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("s")) == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("1")) == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("a", "1")) == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("s", "a")) == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("1", "0")) == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("sdf")) == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("sd")) == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("sda")) == 1, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("fa")) == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("as", "a0")) == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("sd", "as")) == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("df", "as")) == 4, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("a1s", "0a")) == 0, builtIn_currentFile, builtIn_currentLine)
    results:test("".count(VAList([UInt8]).create("a1s", "0a")) == 0, builtIn_currentFile, builtIn_currentLine)
    str = "mamamama"
    results:test(str.count("ma") == 4, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count("mam") == 2, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count("mama") == 2, builtIn_currentFile, builtIn_currentLine)
    results:test("".count("mama") == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("ma", "am")) == 4, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("mam", "ama", "ma")) == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("ma", "ama", "mam")) == 4, builtIn_currentFile, builtIn_currentLine)
    results:test(str.count(VAList([UInt8]).create("mam", "ama")) == 2, builtIn_currentFile, builtIn_currentLine)
    results:test([UInt8].dummy(10).getCapacity() == 10, builtIn_currentFile, builtIn_currentLine)
    results:test([UInt8].dummy(10).getInitCapacity() == 10, builtIn_currentFile, builtIn_currentLine)
    results:test([UInt8].dummy(10).getLength() == 0, builtIn_currentFile, builtIn_currentLine)
    results:test([UInt8].dummy(0).getCapacity() == 0, builtIn_currentFile, builtIn_currentLine)
    results:test([UInt8].dummy(0).getInitCapacity() == 0, builtIn_currentFile, builtIn_currentLine)
    results:test([UInt8].dummy(0).getLength() == 0, builtIn_currentFile, builtIn_currentLine)
    results:test("12" == "12", builtIn_currentFile, builtIn_currentLine)
    results:test("12" != "13", builtIn_currentFile, builtIn_currentLine)
    results:test("12" != "123", builtIn_currentFile, builtIn_currentLine)
    results:test("" == "", builtIn_currentFile, builtIn_currentLine)
    results:test([UInt8] == "", builtIn_currentFile, builtIn_currentLine)
    s:fillWithZeros()
    results:test(s == [UInt64]{0, 0, 0, 0, 0}, builtIn_currentFile, builtIn_currentLine)
    str = "0123456789"
    results:test(str.getAllExceptFirst() == "123456789", builtIn_currentFile, builtIn_currentLine)
    results:test("12".getAllExceptFirst() == "2", builtIn_currentFile, builtIn_currentLine)
    results:test("1".getAllExceptFirst() == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getAllExceptFirstN(1) == "123456789", builtIn_currentFile, builtIn_currentLine)
    results:test("12".getAllExceptFirstN(1) == "2", builtIn_currentFile, builtIn_currentLine)
    results:test("1".getAllExceptFirstN(1) == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getAllExceptFirstN(2) == "23456789", builtIn_currentFile, builtIn_currentLine)
    results:test("12".getAllExceptFirstN(2) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("1".getAllExceptFirstN(0) == "1", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getAllExceptLast() == "012345678", builtIn_currentFile, builtIn_currentLine)
    results:test("12".getAllExceptLast() == "1", builtIn_currentFile, builtIn_currentLine)
    results:test("1".getAllExceptLast() == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getAllExceptLastN(1) == "012345678", builtIn_currentFile, builtIn_currentLine)
    results:test("12".getAllExceptLastN(1) == "1", builtIn_currentFile, builtIn_currentLine)
    results:test("1".getAllExceptLastN(1) == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getAllExceptLastN(2) == "01234567", builtIn_currentFile, builtIn_currentLine)
    results:test("12".getAllExceptLastN(2) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("1".getAllExceptLastN(0) == "1", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getFirst() == '0', builtIn_currentFile, builtIn_currentLine)
    results:test(str.getFirstN(1) == "0", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getFirstN(2) == "01", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getFirstN(0) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("".getFirstN(0) == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getFirstN(10) == "0123456789", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getLast() == '9', builtIn_currentFile, builtIn_currentLine)
    results:test(str.getLastN(1) == "9", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getLastN(2) == "89", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getLastN(0) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("".getLastN(0) == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getLastN(10) == "0123456789", builtIn_currentFile, builtIn_currentLine)
    results:test(str[0] == '0', builtIn_currentFile, builtIn_currentLine)
    results:test(str[2] == '2', builtIn_currentFile, builtIn_currentLine)
    results:test(str[5] == '5', builtIn_currentFile, builtIn_currentLine)
    results:test(str[9] == '9', builtIn_currentFile, builtIn_currentLine)
    results:test(str.getLength() == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.getSlice(0, 10) == "0123456789", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getSlice(1, 10) == "123456789", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getSlice(0, 9) == "012345678", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getSlice(1, 9) == "12345678", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getSlice(2, 3) == "2", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getSlice(2, 2) == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getSlice(0, 0) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("".getSlice(0, 0) == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.getSlice(10, 10) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" > "abb", builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" > "bba", builtIn_currentFile, builtIn_currentLine)
    results:test("bbbb" > "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test("bbba" > "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test("aab" > "aaaa", builtIn_currentFile, builtIn_currentLine)
    results:test("bbbb" > "bba", builtIn_currentFile, builtIn_currentLine)
    results:test("b" > "", builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" > "abb", builtIn_currentFile, builtIn_currentLine)
    results:test(!("abb" > "bbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bba" > "bbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbb" > "bbbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbb" > "bbba"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("aaaa" > "aab"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bba" > "bbbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bb" > "bb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("" > "b"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("" > ""), builtIn_currentFile, builtIn_currentLine)
    results:test("abb" < "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test("bba" < "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" < "bbbb", builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" < "bbba", builtIn_currentFile, builtIn_currentLine)
    results:test("aaaa" < "aab", builtIn_currentFile, builtIn_currentLine)
    results:test("bba" < "bbbb", builtIn_currentFile, builtIn_currentLine)
    results:test("" < "b", builtIn_currentFile, builtIn_currentLine)
    results:test("abb" < "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbb" < "abb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbb" < "bba"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbbb" < "bbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbba" < "bbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("aab" < "aaaa"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbbb" < "bba"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bb" < "bb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("b" < ""), builtIn_currentFile, builtIn_currentLine)
    results:test(!("" < ""), builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" >= "abb", builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" >= "bba", builtIn_currentFile, builtIn_currentLine)
    results:test("bbbb" >= "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test("bbba" >= "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test("aab" >= "aaaa", builtIn_currentFile, builtIn_currentLine)
    results:test("bbbb" >= "bba", builtIn_currentFile, builtIn_currentLine)
    results:test("b" >= "", builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" >= "abb", builtIn_currentFile, builtIn_currentLine)
    results:test("bb" >= "bb", builtIn_currentFile, builtIn_currentLine)
    results:test("" >= "", builtIn_currentFile, builtIn_currentLine)
    results:test(!("abb" >= "bbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bba" >= "bbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbb" >= "bbbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbb" >= "bbba"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("aaaa" >= "aab"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bba" >= "bbbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("" >= "b"), builtIn_currentFile, builtIn_currentLine)
    results:test("abb" <= "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test("bba" <= "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" <= "bbbb", builtIn_currentFile, builtIn_currentLine)
    results:test("bbb" <= "bbba", builtIn_currentFile, builtIn_currentLine)
    results:test("aaaa" <= "aab", builtIn_currentFile, builtIn_currentLine)
    results:test("bba" <= "bbbb", builtIn_currentFile, builtIn_currentLine)
    results:test("" <= "b", builtIn_currentFile, builtIn_currentLine)
    results:test("abb" <= "bbb", builtIn_currentFile, builtIn_currentLine)
    results:test("bb" <= "bb", builtIn_currentFile, builtIn_currentLine)
    results:test("" <= "", builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbb" <= "abb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbb" <= "bba"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbbb" <= "bbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbba" <= "bbb"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("aab" <= "aaaa"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("bbbb" <= "bba"), builtIn_currentFile, builtIn_currentLine)
    results:test(!("b" <= ""), builtIn_currentFile, builtIn_currentLine)
    results:test(str.hasPrefix?("0"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.hasPrefix?("01"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.hasPrefix?("0123456789"), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".hasPrefix?("0123456789"), builtIn_currentFile, builtIn_currentLine)
    results:test(!"012345678".hasPrefix?("0123456789"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.hasSuffix?("9"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.hasSuffix?("89"), builtIn_currentFile, builtIn_currentLine)
    results:test(str.hasSuffix?("0123456789"), builtIn_currentFile, builtIn_currentLine)
    results:test(!"".hasSuffix?("0123456789"), builtIn_currentFile, builtIn_currentLine)
    results:test(!"123456789".hasSuffix?("0123456789"), builtIn_currentFile, builtIn_currentLine)
    results:test([UInt64].init(3) == [UInt64]{0, 0, 0}, builtIn_currentFile, builtIn_currentLine)
    results:test([UInt64].init(0) == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test("".join("a", "b") == "ab", builtIn_currentFile, builtIn_currentLine)
    results:test("".join("", "") == "", builtIn_currentFile, builtIn_currentLine)
    results:test("".join("", "b") == "b", builtIn_currentFile, builtIn_currentLine)
    results:test("".join("b", "") == "b", builtIn_currentFile, builtIn_currentLine)
    results:test("abc".join("d", "", "ef") == "abcdef", builtIn_currentFile, builtIn_currentLine)
    results:test("abc".join("d", "1", "ef") == "abcd1ef", builtIn_currentFile, builtIn_currentLine)
    str = ""
    str:join("a", "b")
    results:test(str == "ab", builtIn_currentFile, builtIn_currentLine)
    str:join("a", "")
    results:test(str == "aba", builtIn_currentFile, builtIn_currentLine)
    str:join("", "")
    results:test(str == "aba", builtIn_currentFile, builtIn_currentLine)
    str:join("", "b")
    results:test(str == "abab", builtIn_currentFile, builtIn_currentLine)
    str:join("c", "d", "e")
    results:test(str == "ababcde", builtIn_currentFile, builtIn_currentLine)
    str = [UInt8].dummy(10)
    str:join("abc", "d", "", "ef")
    results:test(str == "abcdef", builtIn_currentFile, builtIn_currentLine)
    str = "01234567890123456789"
    results:test(str.look('0')[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look('3')[] == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look('5')[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look('9')[] == 9, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look('a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".look('a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('3'))[] == Pair(UInt8, UInt64).create('3', 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('5'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('9'))[] == Pair(UInt8, UInt64).create('9', 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('a')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".look(VAList(UInt8).create('a')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('3', '0'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('3', '5'))[] == Pair(UInt8, UInt64).create('3', 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('_', '5'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('9', 'a'))[] == Pair(UInt8, UInt64).create('9', 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList(UInt8).create('a', 'b')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".look(VAList(UInt8).create('a', 'b')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("0")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("3")[] == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("5")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("9")[] == 9, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".look("a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("01")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("12")[] == 1, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("34")[] == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("56")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("89")[] == 8, builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("8a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".look("8a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look("9a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("3"))[] == Pair([UInt8], UInt64).create("3", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("5"))[] == Pair([UInt8], UInt64).create("5", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("9"))[] == Pair([UInt8], UInt64).create("9", 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".look(VAList([UInt8]).create("a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("01"))[] == Pair([UInt8], UInt64).create("01", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("34"))[] == Pair([UInt8], UInt64).create("34", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("56"))[] == Pair([UInt8], UInt64).create("56", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("89"))[] == Pair([UInt8], UInt64).create("89", 8), builtIn_currentFile, builtIn_currentLine)
    results:test("".look(VAList([UInt8]).create("9a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("3", "0"))[] == Pair([UInt8], UInt64).create("0", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("3", "5"))[] == Pair([UInt8], UInt64).create("3", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("_", "5"))[] == Pair([UInt8], UInt64).create("5", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("9", "a"))[] == Pair([UInt8], UInt64).create("9", 9), builtIn_currentFile, builtIn_currentLine)
    results:test("".look(VAList([UInt8]).create("a", "b")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("34", "01"))[] == Pair([UInt8], UInt64).create("01", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("34", "45"))[] == Pair([UInt8], UInt64).create("34", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("_", "56"))[] == Pair([UInt8], UInt64).create("56", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("89", "a"))[] == Pair([UInt8], UInt64).create("89", 8), builtIn_currentFile, builtIn_currentLine)
    results:test(str.look(VAList([UInt8]).create("a9", "0b")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".look(VAList([UInt8]).create("a9", "0b")).empty?(), builtIn_currentFile, builtIn_currentLine)
    str = "01233223mamamama"
    results:test(str.lookAll('0') == [UInt64]{0}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll('1') == [UInt64]{1}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll('2') == [UInt64]{2, 5, 6}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll('m') == [UInt64]{8, 10, 12, 14}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll('-') == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test("".lookAll('-') == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('0')) == [Pair(UInt8, UInt64)]{Pair(UInt8, UInt64).create('0', 0)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('1')) == [Pair(UInt8, UInt64)]{Pair(UInt8, UInt64).create('1', 1)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('2')) == [Pair(UInt8, UInt64)]{Pair(UInt8, UInt64).create('2', 2), Pair(UInt8, UInt64).create('2', 5), Pair(UInt8, UInt64).create('2', 6)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('m')) == [Pair(UInt8, UInt64)]{Pair(UInt8, UInt64).create('m', 8), Pair(UInt8, UInt64).create('m', 10), Pair(UInt8, UInt64).create('m', 12), Pair(UInt8, UInt64).create('m', 14)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('-')) == [Pair(UInt8, UInt64)], builtIn_currentFile, builtIn_currentLine)
    results:test("".lookAll(VAList(UInt8).create('-')) == [Pair(UInt8, UInt64)], builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('0', '_')) == [Pair(UInt8, UInt64)]{Pair(UInt8, UInt64).create('0', 0)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('_', '0')) == [Pair(UInt8, UInt64)]{Pair(UInt8, UInt64).create('0', 0)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('1', '0')) == [Pair(UInt8, UInt64)]{Pair(UInt8, UInt64).create('0', 0), Pair(UInt8, UInt64).create('1', 1)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('1', 'm')) == [Pair(UInt8, UInt64)]{Pair(UInt8, UInt64).create('1', 1), Pair(UInt8, UInt64).create('m', 8), Pair(UInt8, UInt64).create('m', 10), Pair(UInt8, UInt64).create('m', 12), Pair(UInt8, UInt64).create('m', 14)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList(UInt8).create('-', 'b')) == [Pair(UInt8, UInt64)], builtIn_currentFile, builtIn_currentLine)
    results:test("".lookAll(VAList(UInt8).create('-', 'b')) == [Pair(UInt8, UInt64)], builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("0") == [UInt64]{0}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("1") == [UInt64]{1}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("2") == [UInt64]{2, 5, 6}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("m") == [UInt64]{8, 10, 12, 14}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("-") == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test("".lookAll("-") == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("01") == [UInt64]{0}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("12") == [UInt64]{1}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("23") == [UInt64]{2, 6}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("ma") == [UInt64]{8, 10, 12, 14}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("mam") == [UInt64]{8, 12}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("mama") == [UInt64]{8, 12}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll("mb") == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test("".lookAll("mb") == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("0")) == [Pair([UInt8], UInt64)]{Pair([UInt8], UInt64).create("0", 0)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("1")) == [Pair([UInt8], UInt64)]{Pair([UInt8], UInt64).create("1", 1)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("2")) == [Pair([UInt8], UInt64)]{Pair([UInt8], UInt64).create("2", 2), Pair([UInt8], UInt64).create("2", 5), Pair([UInt8], UInt64).create("2", 6)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("-")) == [Pair([UInt8], UInt64)], builtIn_currentFile, builtIn_currentLine)
    results:test("".lookAll(VAList([UInt8]).create("-")) == [Pair([UInt8], UInt64)], builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("01", "02")) == [Pair([UInt8], UInt64)]{Pair([UInt8], UInt64).create("01", 0)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("01", "23")) == [Pair([UInt8], UInt64)]{Pair([UInt8], UInt64).create("01", 0), Pair([UInt8], UInt64).create("23", 2), Pair([UInt8], UInt64).create("23", 6)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("ma", "mam")) == [Pair([UInt8], UInt64)]{Pair([UInt8], UInt64).create("ma", 8), Pair([UInt8], UInt64).create("ma", 10), Pair([UInt8], UInt64).create("ma", 12), Pair([UInt8], UInt64).create("ma", 14)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("mam", "ma")) == [Pair([UInt8], UInt64)]{Pair([UInt8], UInt64).create("mam", 8), Pair([UInt8], UInt64).create("mam", 12)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("a", "mam")) == [Pair([UInt8], UInt64)]{Pair([UInt8], UInt64).create("mam", 8), Pair([UInt8], UInt64).create("a", 11), Pair([UInt8], UInt64).create("mam", 12), Pair([UInt8], UInt64).create("a", 15)}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookAll(VAList([UInt8]).create("amm", "mm")) == [Pair([UInt8], UInt64)], builtIn_currentFile, builtIn_currentLine)
    results:test("".lookAll(VAList([UInt8]).create("amm", "mm")) == [Pair([UInt8], UInt64)], builtIn_currentFile, builtIn_currentLine)
    str = "01234567890123456789"
    results:test(str.lookFromAtoB(0, 10, '0')[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 0, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookFromAtoB(0, 0, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 6, '5')[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, '5').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 10, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 0, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('1', 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList(UInt8).create('0', 'a')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList(UInt8).create('0', 'r')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 6, VAList(UInt8).create('5', '4'))[] == Pair(UInt8, UInt64).create('4', 4), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, VAList(UInt8).create('5')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, VAList(UInt8).create('a', '5')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookFromAtoB(0, 0, VAList(UInt8).create('a', '5')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 10, "0")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookFromAtoB(0, 0, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 0, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 6, "5")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, "5").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 10, "0123")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, "0123").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, "1a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 6, "45")[] == 4, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, "45").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, "44").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 10, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookFromAtoB(0, 0, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 0, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 10, VAList([UInt8]).create("0123"))[] == Pair([UInt8], UInt64).create("0123", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(0, 10, VAList([UInt8]).create("0123", "1234"))[] == Pair([UInt8], UInt64).create("0123", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList([UInt8]).create("0123", "1234"))[] == Pair([UInt8], UInt64).create("1234", 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList([UInt8]).create("0123", "012a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(1, 10, VAList([UInt8]).create("0123", "00r")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 6, VAList([UInt8]).create("456", "45"))[] == Pair([UInt8], UInt64).create("45", 4), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, VAList([UInt8]).create("45")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookFromAtoB(4, 5, VAList([UInt8]).create("4a", "a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast('0')[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast('3')[] == 13, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast('5')[] == 15, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast('9')[] == 19, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast('a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLast('a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('3'))[] == Pair(UInt8, UInt64).create('3', 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('5'))[] == Pair(UInt8, UInt64).create('5', 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('9'))[] == Pair(UInt8, UInt64).create('9', 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('a')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('3', '0'))[] == Pair(UInt8, UInt64).create('3', 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('3', '5'))[] == Pair(UInt8, UInt64).create('5', 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('_', '5'))[] == Pair(UInt8, UInt64).create('5', 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('9', 'a'))[] == Pair(UInt8, UInt64).create('9', 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList(UInt8).create('a', 'b')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLast(VAList(UInt8).create('a', 'b')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("0")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("3")[] == 13, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("5")[] == 15, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("9")[] == 19, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLast("a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("01")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("12")[] == 11, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("34")[] == 13, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("56")[] == 15, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("89")[] == 18, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("8a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast("9a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLast("9a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("3"))[] == Pair([UInt8], UInt64).create("3", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("5"))[] == Pair([UInt8], UInt64).create("5", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("9"))[] == Pair([UInt8], UInt64).create("9", 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLast(VAList([UInt8]).create("a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("01"))[] == Pair([UInt8], UInt64).create("01", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("34"))[] == Pair([UInt8], UInt64).create("34", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("56"))[] == Pair([UInt8], UInt64).create("56", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("89"))[] == Pair([UInt8], UInt64).create("89", 18), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("9a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("3", "0"))[] == Pair([UInt8], UInt64).create("3", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("3", "5"))[] == Pair([UInt8], UInt64).create("5", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("_", "5"))[] == Pair([UInt8], UInt64).create("5", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("9", "a"))[] == Pair([UInt8], UInt64).create("9", 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("a", "b")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("34", "01"))[] == Pair([UInt8], UInt64).create("34", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("34", "45"))[] == Pair([UInt8], UInt64).create("45", 14), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("_", "56"))[] == Pair([UInt8], UInt64).create("56", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("89", "a"))[] == Pair([UInt8], UInt64).create("89", 18), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLast(VAList([UInt8]).create("a9", "0b")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 20, '0')[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(11, 20, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 0, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastFromAtoB(0, 0, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 10, '0')[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 20, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 6, '5')[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, '5').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 20, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(11, 20, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 0, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastFromAtoB(0, 0, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('1', 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('1', 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, VAList(UInt8).create('0', 'a')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, VAList(UInt8).create('0', 'r')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 6, VAList(UInt8).create('5', '4'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, VAList(UInt8).create('5')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, VAList(UInt8).create('a', '5')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 20, "0")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(11, 20, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 0, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastFromAtoB(0, 0, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 20, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 6, "5")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, "5").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 10, "0123")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, "0123").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, "1a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 6, "45")[] == 4, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, "45").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, "44").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 20, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(11, 20, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 0, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastFromAtoB(0, 0, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 10, VAList([UInt8]).create("0123"))[] == Pair([UInt8], UInt64).create("0123", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(0, 10, VAList([UInt8]).create("0123", "1234"))[] == Pair([UInt8], UInt64).create("1234", 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, VAList([UInt8]).create("0123", "1234"))[] == Pair([UInt8], UInt64).create("1234", 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, VAList([UInt8]).create("0123", "012a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(1, 10, VAList([UInt8]).create("0123", "00r")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 6, VAList([UInt8]).create("456", "45"))[] == Pair([UInt8], UInt64).create("45", 4), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, VAList([UInt8]).create("45")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastFromAtoB(4, 5, VAList([UInt8]).create("4a", "a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, '0')[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, '0')[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, '3')[] == 13, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, '3')[] == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, '5')[] == 15, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, '5')[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, '9')[] == 19, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, '9')[] == 9, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastN(1, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('3'))[] == Pair(UInt8, UInt64).create('3', 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList(UInt8).create('3'))[] == Pair(UInt8, UInt64).create('3', 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('5'))[] == Pair(UInt8, UInt64).create('5', 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList(UInt8).create('5'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('9'))[] == Pair(UInt8, UInt64).create('9', 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList(UInt8).create('9'))[] == Pair(UInt8, UInt64).create('9', 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('a')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('3', '0'))[] == Pair(UInt8, UInt64).create('3', 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList(UInt8).create('3', '0'))[] == Pair(UInt8, UInt64).create('0', 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('3', '5'))[] == Pair(UInt8, UInt64).create('5', 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList(UInt8).create('3', '5'))[] == Pair(UInt8, UInt64).create('3', 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('_', '5'))[] == Pair(UInt8, UInt64).create('5', 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList(UInt8).create('_', '5'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('9', 'a'))[] == Pair(UInt8, UInt64).create('9', 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList(UInt8).create('9', 'a'))[] == Pair(UInt8, UInt64).create('9', 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList(UInt8).create('a', 'b')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastN(1, VAList(UInt8).create('0', '9')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "0")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, "0")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "3")[] == 13, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, "3")[] == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "5")[] == 15, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, "5")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "9")[] == 19, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, "9")[] == 9, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastN(1, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "01")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, "01")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "12")[] == 11, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, "12")[] == 1, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "34")[] == 13, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, "34")[] == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "56")[] == 15, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, "56")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "89")[] == 18, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, "89")[] == 8, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "8a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, "9a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastN(1, "01").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("3"))[] == Pair([UInt8], UInt64).create("3", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("3"))[] == Pair([UInt8], UInt64).create("3", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("5"))[] == Pair([UInt8], UInt64).create("5", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("5"))[] == Pair([UInt8], UInt64).create("5", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("9"))[] == Pair([UInt8], UInt64).create("9", 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("9"))[] == Pair([UInt8], UInt64).create("9", 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastN(1, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("01"))[] == Pair([UInt8], UInt64).create("01", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("01"))[] == Pair([UInt8], UInt64).create("01", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("34"))[] == Pair([UInt8], UInt64).create("34", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("34"))[] == Pair([UInt8], UInt64).create("34", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("56"))[] == Pair([UInt8], UInt64).create("56", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("56"))[] == Pair([UInt8], UInt64).create("56", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("89"))[] == Pair([UInt8], UInt64).create("89", 18), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("89"))[] == Pair([UInt8], UInt64).create("89", 8), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("9a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastN(1, VAList([UInt8]).create("01")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("3", "0"))[] == Pair([UInt8], UInt64).create("3", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("3", "0"))[] == Pair([UInt8], UInt64).create("0", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("3", "5"))[] == Pair([UInt8], UInt64).create("5", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("3", "5"))[] == Pair([UInt8], UInt64).create("3", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("_", "5"))[] == Pair([UInt8], UInt64).create("5", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("_", "5"))[] == Pair([UInt8], UInt64).create("5", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("9", "a"))[] == Pair([UInt8], UInt64).create("9", 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("9", "a"))[] == Pair([UInt8], UInt64).create("9", 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("a", "b")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastN(1, VAList([UInt8]).create("0", "9")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("34", "01"))[] == Pair([UInt8], UInt64).create("34", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("34", "01"))[] == Pair([UInt8], UInt64).create("01", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("34", "45"))[] == Pair([UInt8], UInt64).create("45", 14), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("34", "45"))[] == Pair([UInt8], UInt64).create("45", 4), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("_", "56"))[] == Pair([UInt8], UInt64).create("56", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("_", "56"))[] == Pair([UInt8], UInt64).create("56", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("89", "a"))[] == Pair([UInt8], UInt64).create("89", 18), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(2, VAList([UInt8]).create("89", "a"))[] == Pair([UInt8], UInt64).create("89", 8), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastN(1, VAList([UInt8]).create("a9", "0b")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastN(1, VAList([UInt8]).create("89", "01")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 20, '0')[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(2, 0, 20, '0')[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 11, 20, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 0, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastNFromAtoB(1, 0, 0, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 10, '0')[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(2, 0, 10, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 20, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 6, '5')[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, '5').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 20, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(2, 0, 20, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 11, 20, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 0, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastNFromAtoB(1, 0, 0, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('1', 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(2, 0, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('1', 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(2, 1, 10, VAList(UInt8).create('0', '1')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, VAList(UInt8).create('0', 'a')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, VAList(UInt8).create('0', 'r')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 0, VAList(UInt8).create('0', '9')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastNFromAtoB(1, 0, 0, VAList(UInt8).create('0', '9')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 6, VAList(UInt8).create('5', '4'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(2, 4, 6, VAList(UInt8).create('5', '4'))[] == Pair(UInt8, UInt64).create('4', 4), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, VAList(UInt8).create('5')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, VAList(UInt8).create('a', '5')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 20, "0")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(2, 0, 20, "0")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 11, 20, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 0, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastNFromAtoB(1, 0, 0, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 20, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 6, "5")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, "5").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 10, "0123")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, "0123").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, "1a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 6, "45")[] == 4, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, "45").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 0, "45").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastNFromAtoB(1, 0, 0, "45").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, "44").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 20, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(2, 0, 20, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 11, 20, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 0, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastNFromAtoB(1, 0, 0, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 10, VAList([UInt8]).create("0123"))[] == Pair([UInt8], UInt64).create("0123", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 0, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookLastNFromAtoB(1, 0, 0, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 0, 10, VAList([UInt8]).create("0123", "1234"))[] == Pair([UInt8], UInt64).create("1234", 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, VAList([UInt8]).create("0123", "1234"))[] == Pair([UInt8], UInt64).create("1234", 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, VAList([UInt8]).create("0123", "012a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 1, 10, VAList([UInt8]).create("0123", "00r")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 6, VAList([UInt8]).create("456", "45"))[] == Pair([UInt8], UInt64).create("45", 4), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, VAList([UInt8]).create("45")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookLastNFromAtoB(1, 4, 5, VAList([UInt8]).create("4a", "a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, '0')[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, '0')[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, '3')[] == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, '3')[] == 13, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, '5')[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, '5')[] == 15, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, '9')[] == 9, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, '9')[] == 19, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(3, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookN(1, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('3'))[] == Pair(UInt8, UInt64).create('3', 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList(UInt8).create('3'))[] == Pair(UInt8, UInt64).create('3', 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('5'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList(UInt8).create('5'))[] == Pair(UInt8, UInt64).create('5', 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('9'))[] == Pair(UInt8, UInt64).create('9', 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList(UInt8).create('9'))[] == Pair(UInt8, UInt64).create('9', 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('a')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookN(1, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('3', '0'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList(UInt8).create('3', '0'))[] == Pair(UInt8, UInt64).create('3', 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(3, VAList(UInt8).create('3', '0'))[] == Pair(UInt8, UInt64).create('0', 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(4, VAList(UInt8).create('3', '0'))[] == Pair(UInt8, UInt64).create('3', 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('3', '5'))[] == Pair(UInt8, UInt64).create('3', 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList(UInt8).create('3', '5'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('_', '5'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList(UInt8).create('_', '5'))[] == Pair(UInt8, UInt64).create('5', 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('9', 'a'))[] == Pair(UInt8, UInt64).create('9', 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList(UInt8).create('9', 'a'))[] == Pair(UInt8, UInt64).create('9', 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList(UInt8).create('a', 'b')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookN(1, VAList(UInt8).create('0', '9')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "0")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, "0")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "3")[] == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, "3")[] == 13, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "5")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, "5")[] == 15, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "9")[] == 9, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, "9")[] == 19, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookN(1, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "01")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, "01")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "12")[] == 1, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, "12")[] == 11, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "34")[] == 3, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, "34")[] == 13, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "56")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, "56")[] == 15, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "89")[] == 8, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, "89")[] == 18, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "8a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, "9a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookN(1, "89").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("3"))[] == Pair([UInt8], UInt64).create("3", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("3"))[] == Pair([UInt8], UInt64).create("3", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("5"))[] == Pair([UInt8], UInt64).create("5", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("5"))[] == Pair([UInt8], UInt64).create("5", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("9"))[] == Pair([UInt8], UInt64).create("9", 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("9"))[] == Pair([UInt8], UInt64).create("9", 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookN(1, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("01"))[] == Pair([UInt8], UInt64).create("01", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("01"))[] == Pair([UInt8], UInt64).create("01", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("34"))[] == Pair([UInt8], UInt64).create("34", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("34"))[] == Pair([UInt8], UInt64).create("34", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("56"))[] == Pair([UInt8], UInt64).create("56", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("56"))[] == Pair([UInt8], UInt64).create("56", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("89"))[] == Pair([UInt8], UInt64).create("89", 8), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("89"))[] == Pair([UInt8], UInt64).create("89", 18), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("9a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookN(1, VAList([UInt8]).create("01")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("3", "0"))[] == Pair([UInt8], UInt64).create("0", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2,VAList([UInt8]).create("3", "0"))[] == Pair([UInt8], UInt64).create("3", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(3,VAList([UInt8]).create("3", "0"))[] == Pair([UInt8], UInt64).create("0", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(4,VAList([UInt8]).create("3", "0"))[] == Pair([UInt8], UInt64).create("3", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("3", "5"))[] == Pair([UInt8], UInt64).create("3", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("3", "5"))[] == Pair([UInt8], UInt64).create("5", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("_", "5"))[] == Pair([UInt8], UInt64).create("5", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("_", "5"))[] == Pair([UInt8], UInt64).create("5", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("9", "a"))[] == Pair([UInt8], UInt64).create("9", 9), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("9", "a"))[] == Pair([UInt8], UInt64).create("9", 19), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("a", "b")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookN(1, VAList([UInt8]).create("0", "9")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("34", "01"))[] == Pair([UInt8], UInt64).create("01", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("34", "01"))[] == Pair([UInt8], UInt64).create("34", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(3, VAList([UInt8]).create("34", "01"))[] == Pair([UInt8], UInt64).create("01", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(4, VAList([UInt8]).create("34", "01"))[] == Pair([UInt8], UInt64).create("34", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("34", "45"))[] == Pair([UInt8], UInt64).create("34", 3), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("34", "45"))[] == Pair([UInt8], UInt64).create("34", 13), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("_", "56"))[] == Pair([UInt8], UInt64).create("56", 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("_", "56"))[] == Pair([UInt8], UInt64).create("56", 15), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(1, VAList([UInt8]).create("89", "a"))[] == Pair([UInt8], UInt64).create("89", 8), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(2, VAList([UInt8]).create("89", "a"))[] == Pair([UInt8], UInt64).create("89", 18), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookN(3, VAList([UInt8]).create("89", "a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookN(1, VAList([UInt8]).create("89", "01")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 20, '0')[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 0, 20, '0')[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 1, 20, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 0, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookNFromAtoB(1, 0, 0, '0').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 6, '5')[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 4, 6, '5').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, '5').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, 'a').empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 20, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 0, 20, VAList(UInt8).create('0'))[] == Pair(UInt8, UInt64).create('0', 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 0, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookNFromAtoB(1, 0, 0, VAList(UInt8).create('0')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('0', 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 0, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('1', 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('1', 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 1, 11, VAList(UInt8).create('0', '1'))[] == Pair(UInt8, UInt64).create('0', 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, VAList(UInt8).create('0', 'a')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 0, VAList(UInt8).create('0', '9')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookNFromAtoB(1, 0, 0, VAList(UInt8).create('0', '9')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, VAList(UInt8).create('0', 'r')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 6, VAList(UInt8).create('5', '4'))[] == Pair(UInt8, UInt64).create('4', 4), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 4, 6, VAList(UInt8).create('5', '4'))[] == Pair(UInt8, UInt64).create('5', 5), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, VAList(UInt8).create('5')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, VAList(UInt8).create('a', '5')).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 20, "0")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 0, 20, "0")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 0, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookNFromAtoB(1, 0, 0, "0").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 6, "5")[] == 5, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 4, 6, "5").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, "5").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, "a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 20, "0123")[] == 0, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 0, 20, "0123")[] == 10, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, "0123").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 0, "0123").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookNFromAtoB(1, 0, 0, "0123").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, "1a").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 6, "45")[] == 4, builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 4, 6, "45").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, "45").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, "44").empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 20, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 0, 20, VAList([UInt8]).create("0"))[] == Pair([UInt8], UInt64).create("0", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 0, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookNFromAtoB(1, 0, 0, VAList([UInt8]).create("0")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 20, VAList([UInt8]).create("0123"))[] == Pair([UInt8], UInt64).create("0123", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 0, 20, VAList([UInt8]).create("0123"))[] == Pair([UInt8], UInt64).create("0123", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 0, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("".lookNFromAtoB(1, 0, 0, VAList([UInt8]).create("0123")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 0, 10, VAList([UInt8]).create("0123", "1234"))[] == Pair([UInt8], UInt64).create("0123", 0), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 0, 10, VAList([UInt8]).create("0123", "1234")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 20, VAList([UInt8]).create("0123", "1234"))[] == Pair([UInt8], UInt64).create("1234", 1), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 1, 20, VAList([UInt8]).create("0123", "1234"))[] == Pair([UInt8], UInt64).create("0123", 10), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, VAList([UInt8]).create("0123", "012a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 1, 10, VAList([UInt8]).create("0123", "00r")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 6, VAList([UInt8]).create("456", "45"))[] == Pair([UInt8], UInt64).create("45", 4), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(2, 4, 6, VAList([UInt8]).create("456", "45")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, VAList([UInt8]).create("45")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test(str.lookNFromAtoB(1, 4, 5, VAList([UInt8]).create("4a", "a")).empty?(), builtIn_currentFile, builtIn_currentLine)
    results:test("123".not() == [UInt8]{206.convertTo(UInt8), 205.convertTo(UInt8), 204.convertTo(UInt8)}, builtIn_currentFile, builtIn_currentLine)
    results:test("123".not().not() == "123", builtIn_currentFile, builtIn_currentLine)
    results:test(str.replace('0', 'a') == "a123456789a123456789", builtIn_currentFile, builtIn_currentLine)
    results:test(str.replace('a', '0') == "01234567890123456789", builtIn_currentFile, builtIn_currentLine)
    results:test("".replace('0', 'a') == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.replace("0", "a") == "a123456789a123456789", builtIn_currentFile, builtIn_currentLine)
    results:test(str.replace("a", "0") == "01234567890123456789", builtIn_currentFile, builtIn_currentLine)
    results:test("".replace("0", "a") == "", builtIn_currentFile, builtIn_currentLine)
    results:test(str.replace("0", "") == "123456789123456789", builtIn_currentFile, builtIn_currentLine)
    results:test(str.replace("0123", "0") == "04567890456789", builtIn_currentFile, builtIn_currentLine)
    results:test(str.replace("0123", "01233") == "0123345678901233456789", builtIn_currentFile, builtIn_currentLine)
    str:setFirst('a')
    results:test(str == "a1234567890123456789", builtIn_currentFile, builtIn_currentLine)
    str:setItem(0, '0')
    results:test(str == "01234567890123456789", builtIn_currentFile, builtIn_currentLine)
    str:setItem(10, 'a')
    results:test(str == "0123456789a123456789", builtIn_currentFile, builtIn_currentLine)
    str:setItem(19, 'b')
    results:test(str == "0123456789a12345678b", builtIn_currentFile, builtIn_currentLine)
    str:setLast('9')
    results:test(str == "0123456789a123456789", builtIn_currentFile, builtIn_currentLine)
    s = [UInt64]{0, 1, 3, 7, 13}
    results:test((s << 2) == [UInt64]{0, 4, 12, 28, 52}, builtIn_currentFile, builtIn_currentLine)
    results:test((s >> 1) == [UInt64]{0, 0, 1, 3, 6}, builtIn_currentFile, builtIn_currentLine)
    s <<= 2
    results:test(s == [UInt64]{0, 4, 12, 28, 52}, builtIn_currentFile, builtIn_currentLine)
    s >>= 1
    results:test(s == [UInt64]{0, 2, 6, 14, 26}, builtIn_currentFile, builtIn_currentLine)
    s = [UInt64]
    results:test((s << 2) == [UInt64], builtIn_currentFile, builtIn_currentLine)
    results:test((s >> 1) == [UInt64], builtIn_currentFile, builtIn_currentLine)
    s <<= 2
    results:test(s == [UInt64], builtIn_currentFile, builtIn_currentLine)
    s >>= 1
    results:test(s == [UInt64], builtIn_currentFile, builtIn_currentLine)
    str = "684a98132t168"
    results:test(str.sort(true) == "11234668889at", builtIn_currentFile, builtIn_currentLine)
    results:test(str.sort(false) == "ta98886643211", builtIn_currentFile, builtIn_currentLine)
    results:test("".sort(true) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("".sort(false) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("1".sort(true) == "1", builtIn_currentFile, builtIn_currentLine)
    results:test("1".sort(false) == "1", builtIn_currentFile, builtIn_currentLine)
    results:test("01".sort(true) == "01", builtIn_currentFile, builtIn_currentLine)
    results:test("01".sort(false) == "10", builtIn_currentFile, builtIn_currentLine)
    results:test("10".sort(true) == "01", builtIn_currentFile, builtIn_currentLine)
    results:test("10".sort(false) == "10", builtIn_currentFile, builtIn_currentLine)
    str:sort(true)
    results:test(str == "11234668889at", builtIn_currentFile, builtIn_currentLine)
    str = "684a98132t168"
    str:sort(false)
    results:test(str == "ta98886643211", builtIn_currentFile, builtIn_currentLine)
    str = "684a98132t168"
    results:test(str.sort(@func(less)(UInt8, UInt8)) == "11234668889at", builtIn_currentFile, builtIn_currentLine)
    results:test(str.sort(@func(greater)(UInt8, UInt8)) == "ta98886643211", builtIn_currentFile, builtIn_currentLine)
    results:test("".sort(@func(less)(UInt8, UInt8)) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("".sort(@func(greater)(UInt8, UInt8)) == "", builtIn_currentFile, builtIn_currentLine)
    results:test("1".sort(@func(less)(UInt8, UInt8)) == "1", builtIn_currentFile, builtIn_currentLine)
    results:test("1".sort(@func(greater)(UInt8, UInt8)) == "1", builtIn_currentFile, builtIn_currentLine)
    results:test("01".sort(@func(less)(UInt8, UInt8)) == "01", builtIn_currentFile, builtIn_currentLine)
    results:test("01".sort(@func(greater)(UInt8, UInt8)) == "10", builtIn_currentFile, builtIn_currentLine)
    results:test("10".sort(@func(less)(UInt8, UInt8)) == "01", builtIn_currentFile, builtIn_currentLine)
    results:test("10".sort(@func(greater)(UInt8, UInt8)) == "10", builtIn_currentFile, builtIn_currentLine)
    str:sort(@func(less)(UInt8, UInt8))
    results:test(str == "11234668889at", builtIn_currentFile, builtIn_currentLine)
    str = "684a98132t168"
    str:sort(@func(greater)(UInt8, UInt8))
    results:test(str == "ta98886643211", builtIn_currentFile, builtIn_currentLine)
    str = "_1232233456, 1230"
    results:test(str.split(',') == [[UInt8]]{"_1232233456", " 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split('!') == [[UInt8]]{"_1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split('2') == [[UInt8]]{"_1", "3", "", "33456, 1", "30"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split('_') == [[UInt8]]{"", "1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split('0') == [[UInt8]]{"_1232233456, 123", ""}, builtIn_currentFile, builtIn_currentLine)
    results:test("".split('2') == [[UInt8]]{""}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(',') == [[UInt8]]{"_1232233456", " 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create('!')) == [[UInt8]]{"_1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create('2')) == [[UInt8]]{"_1", "3", "", "33456, 1", "30"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create('_')) == [[UInt8]]{"", "1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create('0')) == [[UInt8]]{"_1232233456, 123", ""}, builtIn_currentFile, builtIn_currentLine)
    results:test("".split(VAList(UInt8).create('2')) == [[UInt8]]{""}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create(',')) == [[UInt8]]{"_1232233456", " 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create('!', '@')) == [[UInt8]]{"_1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create('!', '2')) == [[UInt8]]{"_1", "3", "", "33456, 1", "30"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create('2', '_')) == [[UInt8]]{"", "1", "3", "", "33456, 1", "30"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create('_', '0')) == [[UInt8]]{"", "1232233456, 123", ""}, builtIn_currentFile, builtIn_currentLine)
    results:test("".split(VAList(UInt8).create('2', '0')) == [[UInt8]]{""}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList(UInt8).create(',', '4')) == [[UInt8]]{"_1232233", "56", " 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(",") == [[UInt8]]{"_1232233456", " 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split("!") == [[UInt8]]{"_1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split("2") == [[UInt8]]{"_1", "3", "", "33456, 1", "30"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split("_") == [[UInt8]]{"", "1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split("0") == [[UInt8]]{"_1232233456, 123", ""}, builtIn_currentFile, builtIn_currentLine)
    results:test("".split("2") == [[UInt8]]{""}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(", ") == [[UInt8]]{"_1232233456", "1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split("223") == [[UInt8]]{"_123", "3456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split("223 ") == [[UInt8]]{"_1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split("23") == [[UInt8]]{"_1", "2", "3456, 1", "0"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split("_123") == [[UInt8]]{"", "2233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split("1230") == [[UInt8]]{"_1232233456, ", ""}, builtIn_currentFile, builtIn_currentLine)
    results:test("".split("20") == [[UInt8]]{""}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(", 123") == [[UInt8]]{"_1232233456", "0"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("!")) == [[UInt8]]{"_1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("2")) == [[UInt8]]{"_1", "3", "", "33456, 1", "30"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("_")) == [[UInt8]]{"", "1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("0")) == [[UInt8]]{"_1232233456, 123", ""}, builtIn_currentFile, builtIn_currentLine)
    results:test("".split(VAList([UInt8]).create("2")) == [[UInt8]]{""}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create(",")) == [[UInt8]]{"_1232233456", " 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("!", "@")) == [[UInt8]]{"_1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("!", "2")) == [[UInt8]]{"_1", "3", "", "33456, 1", "30"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("2", "_")) == [[UInt8]]{"", "1", "3", "", "33456, 1", "30"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("_", "0")) == [[UInt8]]{"", "1232233456, 123", ""}, builtIn_currentFile, builtIn_currentLine)
    results:test("".split(VAList([UInt8]).create("2", "0")) == [[UInt8]]{""}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create(",", "4")) == [[UInt8]]{"_1232233", "56", " 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("! ")) == [[UInt8]]{"_1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("23")) == [[UInt8]]{"_1", "2", "3456, 1", "0"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("_123")) == [[UInt8]]{"", "2233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("0")) == [[UInt8]]{"_1232233456, 123", ""}, builtIn_currentFile, builtIn_currentLine)
    results:test("".split(VAList([UInt8]).create("22")) == [[UInt8]]{""}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create(", ")) == [[UInt8]]{"_1232233456", "1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("!2", "@123")) == [[UInt8]]{"_1232233456, 1230"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("!", "23")) == [[UInt8]]{"_1", "2", "3456, 1", "0"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("23", "_")) == [[UInt8]]{"", "1", "2", "3456, 1", "0"}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create("_1", "30")) == [[UInt8]]{"", "232233456, 12", ""}, builtIn_currentFile, builtIn_currentLine)
    results:test("".split(VAList([UInt8]).create("23", "30")) == [[UInt8]]{""}, builtIn_currentFile, builtIn_currentLine)
    results:test(str.split(VAList([UInt8]).create(", ", "45")) == [[UInt8]]{"_1232233", "6", "1230"}, builtIn_currentFile, builtIn_currentLine)
    str:swap(0, 1)
    results:test(str == "1_232233456, 1230", builtIn_currentFile, builtIn_currentLine)
    str:swap(4, 7)
    results:test(str == "1_233232456, 1230", builtIn_currentFile, builtIn_currentLine)
    str:swap(15, 16)
    results:test(str == "1_233232456, 1203", builtIn_currentFile, builtIn_currentLine)
    str:swap(1, 1)
    results:test(str == "1_233232456, 1203", builtIn_currentFile, builtIn_currentLine)
    results:test("123".toString() == "123", builtIn_currentFile, builtIn_currentLine)
    results:test("".toString() == "", builtIn_currentFile, builtIn_currentLine)
    results:test("123".asSlice().toString() == "[49, 50, 51]", builtIn_currentFile, builtIn_currentLine)
    results:test("".asSlice().toString() == "[]", builtIn_currentFile, builtIn_currentLine)
