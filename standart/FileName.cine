func loadFile(fileName)
    include
        #include <stdio.h>
        #include <stdlib.h>
        #include <stddef.h>
        #include <string.h>
    rules
        final = fileName == [UInt8]
        result = Box(BinaryData)
    fileNameLength .= fileName.getLength()
    flag debug is set?
        then debugMessage(fileNameLength == 0, "File: " builtIn_currentFile ", line: " builtIn_currentLine ". UB - file name is empty.")
    error := false
    C
        char zeroEndedFileName[fileNameLength_ + 1];
        memcpy(zeroEndedFileName, fileName_.items, fileNameLength_);
        zeroEndedFileName[fileNameLength_] = 0;
        FILE* file = fopen(zeroEndedFileName, "r");
        error_ = file == NULL;
    if !error
        then
            fileSize := 0
            C
                fseek(file, 0L, SEEK_END);
                fileSize_ = ftell(file);
            if fileSize == 0
                then result:put(BinaryData)
                else
                    binaryData := BinaryData
                    binaryData:private_data = [UInt8].init(fileSize)
                    readedLength := 0
                    C
                        rewind(file);
                        readedLength_ = fread(binaryData_.private_data_.items, 1, fileSize_, file);
                    if readedLength == fileSize
                        then result:put(binaryData)
            C
                fclose(file);
