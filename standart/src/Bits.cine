group Bits
//require
//and(a, a) -> a
//not(a) -> a
//or(a, a) -> a
//shl(a, b) -> a
//shr(a, b) -> a
//xor(a, a) -> a

proc andEq(:a > Bits, b a) #4
    attributes
        alwaysInline
    a = a & b

proc orEq(:a > Bits, b a) #4
    attributes
        alwaysInline
    a = a | b

proc shlEq(:a > Bits, b > BasicUnsignedInteger) #4
    attributes
        alwaysInline
    a = a << b

proc shrEq(:a > Bits, b > BasicUnsignedInteger) #4
    attributes
        alwaysInline
    a = a >> b

proc xorEq(:a > Bits, b a) #4
    attributes
        alwaysInline
    a = a ^ b

