type BinaryData
    private_data [UInt8]

func convertTo(from BinaryData, to [UInt8]) [UInt8]
    attributes
        alwaysInline
    result = from.private_data

func convertTo(from [UInt8], to BinaryData) BinaryData
    attributes
        alwaysInline
    result:private_data = from

func getLength(data BinaryData) UInt64
    attributes
        alwaysInline
    result = data.private_data.getLength()

func writeToFile(data BinaryData, fileName [UInt8]) Bool
    include
        #include <stdio.h>
        #include <stdlib.h>
        #include <stddef.h>
        #include <string.h>
    fileNameLength .= fileName.getLength()
    flag debug is
        "enable"
            panic(fileNameLength == 0, "File: " builtIn_currentFile ", line: " builtIn_currentLine ". UB - file name is empty.")
    C
        char zeroEndedFileName[fileNameLength_ + 1];
        memcpy(zeroEndedFileName, fileName_.items, fileNameLength_);
        zeroEndedFileName[fileNameLength_] = 0;
        FILE* file = fopen(zeroEndedFileName, "w");
        result_ = file != NULL;
    if result
        then
            if data.getLength() != 0
                then
                    writedLength := 0
                    C
                        writedLength_ = fwrite(data_.private_data_.items, 1, data_.private_data_.length, file);
                    result = writedLength == data.getLength()
            C
                fclose(file);
