group Number
//require
//add(a, a) -> a
//dec(:a)
//div(a, a) -> a
//fromString(a, [UInt8]) -> Box(a)
//inc(:a)
//mul(a, a) -> a
//power(a, a) -> a
//sub(a, a) -> a
//toString(a) -> [UInt8]

rules
    1 = type > Number
    join 1 StringReader
    join 1 StringWriter

proc addEq(:a, b) #4
    attributes
        alwaysInline
    rules
        final = a > Number & b == a
    a = a + b

proc divEq(:a, b) #4
    attributes
        alwaysInline
    rules
        final = a > Number & b == a
    a = a / b

proc mulEq(:a, b) #4
    attributes
        alwaysInline
    rules
        final = a > Number & b == a
    a = a * b

proc subEq(:a, b) #4
    attributes
        alwaysInline
    rules
        final = a > Number & b == a
    a = a - b
