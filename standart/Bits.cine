group Bits
//require
//and(a, a) -> a
//not(a) -> a
//or(a, a) -> a
//shl(a, b) -> a
//shr(a, b) -> a
//xor(a, a) -> a

proc andEq(:a, b) #4
    rules
        final = a > Bits & b == a
    a = a & b

proc orEq(:a, b) #4
    rules
        final = a > Bits & b == a
    a = a | b

proc shlEq(:a, b) #4
    rules
        final = a > Bits & b > BasicUnsignedInteger
    a = a << b

proc shrEq(:a, b) #4
    rules
        final = a > Bits & b > BasicUnsignedInteger
    a = a >> b

proc xorEq(:a, b) #4
    rules
        final = a > Bits & b == a
    a = a ^ b

