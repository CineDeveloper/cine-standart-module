group BasicNumber
//require
//dec(:a)
//fromString(a, [UInt8]) -> a
//inc(:a)
//power(a, a) -> a
//toString(a) -> [UInt8]

rules
    1 = type > BasicNumber
    join 1 Number
    join 1 Ordered
    join 1 StringWriter
    join 1 StringReader

func add(a, b) #4
    rules
        final = a > BasicNumber & b == a
        result = a
    C
        result_ = a_ + b_;

func div(a, b) #4
    rules
        final = a > BasicNumber & b == a
        result = a
    flag debug is set?
        then debugMessage(b == 0, "File: " builtIn_currentFile ", line: " builtIn_currentLine ". UB - division by zero.")
    C
        result_ = a_ / b_;

func equal(a, b) #4
    rules
        final = a > BasicNumber & b == a
        result = Bool
    C
        result_ = a_ == b_;

func greater(a, b) #4
    rules
        final = a > BasicNumber & b == a
        result = Bool
    C
        result_ = a_ > b_;

func greaterOrEqual(a, b) #4
    rules
        final = a > BasicNumber & b == a
        result = Bool
    C
        result_ = a_ >= b_;

func less(a, b) #4
    rules
        final = a > BasicNumber & b == a
        result = Bool
    C
        result_ = a_ < b_;

func lessOrEqual(a, b) #4
    rules
        final = a > BasicNumber & b == a
        result = Bool
    C
        result_ = a_ <= b_;

func mul(a, b) #4
    rules
        final = a > BasicNumber & b == a
        result = a
    C
        result_ = a_ * b_;

func sub(a, b) #4
    rules
        final = a > BasicNumber & b == a
        result = a
    C
        result_ = a_ - b_;
